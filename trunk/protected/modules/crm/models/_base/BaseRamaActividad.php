<?php

/**
 * This is the model base class for the table "rama_actividad".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "RamaActividad".
 *
 * Columns in table "rama_actividad" available as properties of the model,
 * followed by relations of table "rama_actividad" available as properties of the model.
 *
 * @property integer $id
 * @property string $nombre
 * @property string $estado
 * @property integer $subsector_id
 *
 * @property Actividad[] $actividads
 * @property Subsector $subsector
 */
abstract class BaseRamaActividad extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'rama_actividad';
    }

    public static function representingColumn() {
        return 'nombre';
    }

    public function rules() {
        return array(
            array('nombre, estado, subsector_id', 'required'),
            array('subsector_id', 'numerical', 'integerOnly'=>true),
            array('nombre', 'length', 'max'=>45),
            array('estado', 'length', 'max'=>8),
            array('estado', 'in', 'range' => array('ACTIVO','INACTIVO')), // enum,
            array('id, nombre, estado, subsector_id', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'actividads' => array(self::HAS_MANY, 'Actividad', 'rama_actividad_id'),
            'subsector' => array(self::BELONGS_TO, 'Subsector', 'subsector_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'nombre' => Yii::t('app', 'Nombre'),
                'estado' => Yii::t('app', 'Estado'),
                'subsector_id' => Yii::t('app', 'Subsector'),
                'actividads' => null,
                'subsector' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('nombre', $this->nombre, true);
        $criteria->compare('estado', $this->estado, true);
        $criteria->compare('subsector_id', $this->subsector_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}